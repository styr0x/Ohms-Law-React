{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thomas\\\\Local Sites\\\\styr0x.github.io\\\\React\\\\final-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(key) {\n  _s();\n\n  const [voltValue, setVoltValue] = useState();\n  const [ampValue, setAmpValue] = useState();\n  const [ohmValue, setOhmValue] = useState();\n  const [wattValue, setWattValue] = useState();\n  const [border1, setBorder1] = useState();\n  const [border2, setBorder2] = useState();\n  const [border3, setBorder3] = useState();\n  const [border4, setBorder4] = useState();\n  const [buttonLabel, setButtonLabel] = useState(\"Calculate\");\n  console.log(key);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Header\",\n      children: \"Ohm's Law\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Parent\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        m: 10,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"v\",\n          autoComplete: \"off\",\n          style: border1,\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"Volts\",\n          variant: \"filled\",\n          onChange: readValue,\n          value: voltValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"a\",\n          autoComplete: \"off\",\n          style: border2,\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"Ampere\",\n          variant: \"filled\",\n          onChange: readValue,\n          value: ampValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"o\",\n          autoComplete: \"off\",\n          style: border3,\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"Ohms\",\n          variant: \"filled\",\n          onChange: readValue,\n          value: ohmValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"w\",\n          autoComplete: \"off\",\n          style: border4,\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"Watts\",\n          variant: \"filled\",\n          onChange: readValue,\n          value: wattValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Buttons\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: calculate,\n          children: buttonLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n\n  function readValue(e) {\n    let value = e.target.value;\n    let id = e.target.id;\n\n    if (id == \"v\") {\n      setVoltValue(value);\n    } else if (id == \"a\") {\n      setAmpValue(value);\n    } else if (id == \"o\") {\n      setOhmValue(value);\n    } else if (id == \"w\") {\n      setWattValue(value);\n    }\n  }\n\n  function calculate() {\n    if (buttonLabel == \"Calculate\") {\n      if (voltValue != null && ampValue != null) {\n        setOhmValue(parseFloat(voltValue / ampValue).toFixed(2));\n        setWattValue(parseFloat(voltValue * ampValue).toFixed(2));\n        setBorder3({\n          border: '5px solid orange'\n        });\n        setBorder4({\n          border: '5px solid orange'\n        });\n      } else if (voltValue != null && ohmValue != null) {\n        setAmpValue(parseFloat(voltValue / ohmValue).toFixed(2));\n        setWattValue(parseFloat(Math.pow(voltValue, 2) * ohmValue).toFixed(2));\n        setBorder2({\n          border: '5px solid orange'\n        });\n        setBorder4({\n          border: '5px solid orange'\n        });\n      } else if (voltValue != null && wattValue != null) {\n        setAmpValue(parseFloat(wattValue / voltValue).toFixed(2));\n        setOhmValue(parseFloat(Math.pow(voltValue, 2) / wattValue).toFixed(2));\n        setBorder2({\n          border: '5px solid orange'\n        });\n        setBorder3({\n          border: '5px solid orange'\n        });\n      } else if (ampValue != null && wattValue != null) {\n        setVoltValue(parseFloat(wattValue / ampValue).toFixed(2));\n        setOhmValue(parseFloat(wattValue / Math.pow(ampValue, 2)).toFixed(2));\n        setBorder1({\n          border: '5px solid orange'\n        });\n        setBorder3({\n          border: '5px solid orange'\n        });\n      } else if (ohmValue != null && ampValue != null) {\n        setVoltValue(parseFloat(ohmValue * ampValue).toFixed(2));\n        setWattValue(parseFloat(Math.pow(ampValue, 2) * ohmValue).toFixed(2));\n        setBorder1({\n          border: '5px solid orange'\n        });\n        setBorder4({\n          border: '5px solid orange'\n        });\n      } else if (ohmValue != null && wattValue != null) {\n        setVoltValue(parseFloat(Math.sqrt(wattValue * ohmValue)).toFixed(2));\n        setAmpValue(parseFloat(Math.sqrt(wattValue / ohmValue)).toFixed(2));\n        setBorder1({\n          border: '5px solid orange'\n        });\n        setBorder2({\n          border: '5px solid orange'\n        });\n      }\n\n      setButtonLabel(\"Reset\");\n    } else if (buttonLabel == \"Reset\") {\n      setVoltValue();\n      setAmpValue();\n      setOhmValue();\n      setWattValue();\n      setBorder1();\n      setBorder2();\n      setBorder3();\n      setBorder4();\n    }\n  }\n}\n\n_s(App, \"cephxupWNmww12W7i2eIEtOQ1G4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Thomas/Local Sites/styr0x.github.io/React/final-project/src/App.js"],"names":["TextField","Button","Box","React","useState","App","key","voltValue","setVoltValue","ampValue","setAmpValue","ohmValue","setOhmValue","wattValue","setWattValue","border1","setBorder1","border2","setBorder2","border3","setBorder3","border4","setBorder4","buttonLabel","setButtonLabel","console","log","shrink","readValue","calculate","e","value","target","id","parseFloat","toFixed","border","Math","pow","sqrt"],"mappings":"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","sourcesContent":["import './App.css';\nimport TextField from '@mui/material/TextField'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box';\nimport React, {useState} from 'react';\n\n\nfunction App(key) {\n  const [voltValue, setVoltValue] = useState();\n  const [ampValue, setAmpValue] = useState();\n  const [ohmValue, setOhmValue] = useState();\n  const [wattValue, setWattValue] = useState();\n\n  const [border1, setBorder1] = useState();\n  const [border2, setBorder2] = useState();\n  const [border3, setBorder3] = useState();\n  const [border4, setBorder4] = useState();\n\n  const [buttonLabel, setButtonLabel] = useState(\"Calculate\");\n\n  console.log(key)\n  return (\n    <div className=\"App\">\n      <header className='Header'>Ohm's Law</header>\n      <div className='Parent'>\n        <Box m={10}>\n\n            <TextField id=\"v\" autoComplete='off' style={border1} InputLabelProps={{shrink: true}} label=\"Volts\" variant=\"filled\" onChange={readValue} value={voltValue}/>\n            <br></br>\n            <br></br>\n            <TextField id=\"a\" autoComplete='off' style={border2} InputLabelProps={{shrink: true}} label=\"Ampere\" variant=\"filled\" onChange={readValue} value={ampValue}/>\n            <br></br>\n            <br></br>\n            <TextField id=\"o\" autoComplete='off' style={border3} InputLabelProps={{shrink: true}} label=\"Ohms\" variant=\"filled\" onChange={readValue} value={ohmValue}/>\n            <br></br>\n            <br></br>\n            <TextField id=\"w\" autoComplete='off' style={border4} InputLabelProps={{shrink: true}} label=\"Watts\" variant=\"filled\" onChange={readValue} value={wattValue}/>\n\n        </Box>\n\n\n        <div className='Buttons'>\n          <Button variant=\"contained\" onClick={calculate}>{buttonLabel}</Button>\n        </div>\n      </div>\n\n    </div>\n  );\n\n  \n  function readValue(e) {\n    let value = e.target.value;\n    let id = e.target.id;\n\n    if (id == \"v\") {\n      setVoltValue(value);\n    }\n\n    \n    else if (id == \"a\") {\n      setAmpValue(value);\n    }\n\n    \n    else if (id == \"o\") {\n      setOhmValue(value);\n    }\n\n    \n    else if (id == \"w\") {\n      setWattValue(value);\n    }\n\n  }\n\n  function calculate() {\n\n    if (buttonLabel == \"Calculate\") {\n      if (voltValue != null && ampValue != null) {\n        setOhmValue(parseFloat(voltValue / ampValue).toFixed(2));\n        setWattValue(parseFloat(voltValue * ampValue).toFixed(2));\n\n        setBorder3({border: '5px solid orange'});\n        setBorder4({border: '5px solid orange'});\n    }\n\n    else if (voltValue != null && ohmValue != null) {\n        setAmpValue(parseFloat(voltValue / ohmValue).toFixed(2));\n        setWattValue(parseFloat(Math.pow(voltValue, 2) * ohmValue).toFixed(2));\n\n        setBorder2({border: '5px solid orange'});\n        setBorder4({border: '5px solid orange'});\n    }\n\n    else if (voltValue != null && wattValue != null) {\n      setAmpValue(parseFloat(wattValue / voltValue).toFixed(2));\n      setOhmValue(parseFloat(Math.pow(voltValue, 2) / wattValue).toFixed(2));\n\n      setBorder2({border: '5px solid orange'});\n      setBorder3({border: '5px solid orange'});\n    }\n\n    else if (ampValue != null && wattValue != null) {\n      setVoltValue(parseFloat(wattValue / ampValue).toFixed(2));\n      setOhmValue(parseFloat(wattValue / Math.pow(ampValue, 2)).toFixed(2));\n\n      setBorder1({border: '5px solid orange'});\n      setBorder3({border: '5px solid orange'});\n    }\n\n    else if (ohmValue != null && ampValue != null) {\n        setVoltValue(parseFloat(ohmValue * ampValue).toFixed(2));\n        setWattValue(parseFloat(Math.pow(ampValue, 2) * ohmValue).toFixed(2));\n\n        setBorder1({border: '5px solid orange'});\n        setBorder4({border: '5px solid orange'});\n    }\n\n    else if (ohmValue != null && wattValue != null) {\n        setVoltValue(parseFloat(Math.sqrt(wattValue * ohmValue)).toFixed(2));\n        setAmpValue(parseFloat(Math.sqrt(wattValue / ohmValue)).toFixed(2));\n        \n        setBorder1({border: '5px solid orange'});\n        setBorder2({border: '5px solid orange'});\n    }\n\n    setButtonLabel(\"Reset\");\n    }\n\n    else if (buttonLabel == \"Reset\") {\n      setVoltValue();\n      setAmpValue();\n      setOhmValue();\n      setWattValue();\n\n      setBorder1();\n      setBorder2();\n      setBorder3();\n      setBorder4();\n    }\n\n  }\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}