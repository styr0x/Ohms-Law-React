{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thomas\\\\Local Sites\\\\styr0x.github.io\\\\React\\\\final-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [voltValue, setVoltValue] = useState();\n  const [ampValue, setAmpValue] = useState();\n  const [ohmValue, setOhmValue] = useState();\n  const [wattValue, setWattValue] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Header\",\n      children: \"Ohm's Law\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Parent\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        m: 10,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"v\",\n          style: border1,\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"Volts\",\n          variant: \"filled\",\n          onChange: readValue,\n          value: voltValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"a\",\n          style: border2,\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"Ampere\",\n          variant: \"filled\",\n          onChange: readValue,\n          value: ampValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"o\",\n          style: border3,\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"Ohms\",\n          variant: \"filled\",\n          onChange: readValue,\n          value: ohmValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"w\",\n          style: border4,\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"Watts\",\n          variant: \"filled\",\n          onChange: readValue,\n          value: wattValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Buttons\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: calculate,\n          children: \"Calculate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n\n  function readValue(e) {\n    let value = e.target.value;\n    let id = e.target.id;\n\n    if (id == \"v\") {\n      setVoltValue(value);\n    } else if (id == \"a\") {\n      setAmpValue(value);\n    } else if (id == \"o\") {\n      setOhmValue(value);\n    } else if (id == \"w\") {\n      setWattValue(value);\n    }\n  }\n\n  function calculate() {\n    if (voltValue != null && ampValue != null) {\n      setOhmValue(parseFloat(voltValue / ampValue).toFixed(2));\n      setWattValue(parseFloat(voltValue * ampValue).toFixed(2));\n    } else if (voltValue != null && ohmValue != null) {\n      setAmpValue(parseFloat(voltValue / ohmValue).toFixed(2));\n      setWattValue(parseFloat(Math.pow(voltValue, 2) * ohmValue).toFixed(2));\n    } else if (voltValue != null && wattValue != null) {\n      setAmpValue(parseFloat(wattValue / voltValue).toFixed(2));\n      setOhmValue(parseFloat(Math.pow(voltValue, 2) / wattValue).toFixed(2));\n    } else if (ampValue != null && wattValue != null) {\n      setVoltValue(parseFloat(wattValue / ampValue).toFixed(2));\n      setOhmValue(parseFloat(wattValue / Math.pow(ampValue, 2)).toFixed(2));\n    } else if (ohmValue != null && ampValue != null) {\n      setVoltValue(parseFloat(ohmValue * ampValue).toFixed(2));\n      setWattValue(parseFloat(Math.pow(ampValue, 2) * ohmValue).toFixed(2));\n    } else if (ohmValue != null && wattValue != null) {\n      setVoltValue(parseFloat(Math.sqrt(wattValue * ohmValue)).toFixed(2));\n      setAmpValue(parseFloat(Math.sqrt(wattValue / ohmValue)).toFixed(2));\n    }\n  }\n}\n\n_s(App, \"JSrF0UQjl/XoJI1Nv2BYTX+E5eg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Thomas/Local Sites/styr0x.github.io/React/final-project/src/App.js"],"names":["TextField","Button","Box","React","useState","App","voltValue","setVoltValue","ampValue","setAmpValue","ohmValue","setOhmValue","wattValue","setWattValue","border1","shrink","readValue","border2","border3","border4","calculate","e","value","target","id","parseFloat","toFixed","Math","pow","sqrt"],"mappings":"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","sourcesContent":["import './App.css';\nimport TextField from '@mui/material/TextField'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box';\nimport React, {useState} from 'react';\n\n\nfunction App() {\n  const [voltValue, setVoltValue] = useState();\n  const [ampValue, setAmpValue] = useState();\n  const [ohmValue, setOhmValue] = useState();\n  const [wattValue, setWattValue] = useState();\n\n  return (\n    <div className=\"App\">\n      <header className='Header'>Ohm's Law</header>\n      <div className='Parent'>\n        <Box m={10}>\n\n            <TextField id=\"v\" style={border1} InputLabelProps={{shrink: true}} label=\"Volts\" variant=\"filled\" onChange={readValue} value={voltValue}/>\n            <br></br>\n            <br></br>\n            <TextField id=\"a\" style={border2} InputLabelProps={{shrink: true}} label=\"Ampere\" variant=\"filled\" onChange={readValue} value={ampValue}/>\n            <br></br>\n            <br></br>\n            <TextField id=\"o\" style={border3} InputLabelProps={{shrink: true}} label=\"Ohms\" variant=\"filled\" onChange={readValue} value={ohmValue}/>\n            <br></br>\n            <br></br>\n            <TextField id=\"w\" style={border4} InputLabelProps={{shrink: true}} label=\"Watts\" variant=\"filled\" onChange={readValue} value={wattValue}/>\n\n        </Box>\n\n\n        <div className='Buttons'>\n          <Button variant=\"contained\" onClick={calculate}>Calculate</Button>\n        </div>\n      </div>\n\n    </div>\n  );\n\n  \n  function readValue(e) {\n    let value = e.target.value;\n    let id = e.target.id;\n\n    if (id == \"v\") {\n      setVoltValue(value);\n    }\n\n    \n    else if (id == \"a\") {\n      setAmpValue(value);\n    }\n\n    \n    else if (id == \"o\") {\n      setOhmValue(value);\n    }\n\n    \n    else if (id == \"w\") {\n      setWattValue(value);\n    }\n\n  }\n\n  function calculate() {\n\n    if (voltValue != null && ampValue != null) {\n        setOhmValue(parseFloat(voltValue / ampValue).toFixed(2));\n        setWattValue(parseFloat(voltValue * ampValue).toFixed(2));\n    }\n\n    else if (voltValue != null && ohmValue != null) {\n        setAmpValue(parseFloat(voltValue / ohmValue).toFixed(2));\n        setWattValue(parseFloat(Math.pow(voltValue, 2) * ohmValue).toFixed(2));\n    }\n\n    else if (voltValue != null && wattValue != null) {\n      setAmpValue(parseFloat(wattValue / voltValue).toFixed(2));\n      setOhmValue(parseFloat(Math.pow(voltValue, 2) / wattValue).toFixed(2));\n    }\n\n    else if (ampValue != null && wattValue != null) {\n      setVoltValue(parseFloat(wattValue / ampValue).toFixed(2));\n      setOhmValue(parseFloat(wattValue / Math.pow(ampValue, 2)).toFixed(2));\n    }\n\n    else if (ohmValue != null && ampValue != null) {\n        setVoltValue(parseFloat(ohmValue * ampValue).toFixed(2));\n        setWattValue(parseFloat(Math.pow(ampValue, 2) * ohmValue).toFixed(2));\n    }\n\n    else if (ohmValue != null && wattValue != null) {\n        setVoltValue(parseFloat(Math.sqrt(wattValue * ohmValue)).toFixed(2));\n        setAmpValue(parseFloat(Math.sqrt(wattValue / ohmValue)).toFixed(2));  \n    }\n\n\n  }\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}